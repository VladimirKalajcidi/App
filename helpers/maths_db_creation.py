import sqlite3

# Connect to SQLite database (or create it if it doesn't exist)
conn = sqlite3.connect('math_topics.db')

# Create a cursor object to interact with the database
cursor = conn.cursor()

cursor.execute('DROP TABLE IF EXISTS terms')

# Create a table with the specified structure
cursor.execute('''
CREATE TABLE IF NOT EXISTS terms (
    id INTEGER PRIMARY KEY,
    maths_topic TEXT NOT NULL,
    term TEXT NOT NULL,
    definition TEXT NOT NULL,
    dependency_id INTEGER NOT NULL
)
''')

# Data for the terms
data = [
    # Linear Algebra Terms
    (1, 'linear algebra', 'matrix', 'A matrix is a rectangular array of numbers or symbols arranged in rows and columns.', -1),
    (2, 'linear algebra', 'vector', 'A vector is an object that has both a magnitude and a direction.', -1),
    (3, 'linear algebra', 'scalar', 'A scalar is a single number that is used to represent quantity.', -1),
    (4, 'linear algebra', 'determinant', 'The determinant is a value that can be computed from the elements of a square matrix.', 1),  # depends on matrix
    (5, 'linear algebra', 'eigenvalue', 'An eigenvalue is a special number associated with a linear transformation of a vector space.', -1),
    (6, 'linear algebra', 'eigenvector', 'An eigenvector is a non-zero vector that changes by only a scalar factor when a linear transformation is applied.', 5),  # depends on eigenvalue
    (7, 'linear algebra', 'transpose', 'The transpose of a matrix is obtained by switching its rows with its columns.', 1),  # depends on matrix
    (8, 'linear algebra', 'inverse', 'The inverse of a matrix A is another matrix A^-1 such that AA^-1 = I, where I is the identity matrix.', 1),  # depends on matrix
    (9, 'linear algebra', 'rank', 'The rank of a matrix is the dimension of the vector space generated by its rows or columns.', 1),  # depends on matrix
    (10, 'linear algebra', 'linear combination', 'A linear combination is a sum of scalar multiples of vectors from a given set.', 2),  # depends on vector

    # Calculus Terms
    (11, 'calculus', 'limit', 'A limit is a value that a function approaches as the input approaches some value.', -1),
    (12, 'calculus', 'derivative', 'A derivative represents the rate at which a quantity changes with respect to another quantity.', 14),  # depends on function
    (13, 'calculus', 'integral', 'An integral represents the accumulation of quantities, often interpreted as area under a curve.', -1),
    (14, 'calculus', 'function', 'A function is a relation that assigns exactly one output for every input.', -1),
    (15, 'calculus', 'continuity', 'A function is continuous if there are no breaks, jumps, or holes in its graph.', 14),  # depends on function
    (16, 'calculus', 'inflection point', 'An inflection point is a point on a curve where the curvature changes sign.', 15),  # depends on continuity
    (17, 'calculus', 'fundamental theorem of calculus', 'The fundamental theorem of calculus links the concept of differentiation and integration.', 12),  # depends on derivative
    (18, 'calculus', 'chain rule', 'The chain rule is a formula used to compute the derivative of a composite function.', 12),  # depends on derivative
    (19, 'calculus', 'product rule', 'The product rule is a formula used to find the derivative of the product of two functions.', 12),  # depends on derivative
    (20, 'calculus', 'quotient rule', 'The quotient rule is a formula used to find the derivative of the quotient of two functions.', 12)  # depends on derivative
]

# Insert the data into the table
cursor.executemany('''
INSERT INTO terms (id, maths_topic, term, definition, dependency_id)
VALUES (?, ?, ?, ?, ?)
''', data)

# Commit the changes and close the connection
conn.commit()
conn.close()

print("Database created and populated successfully.")
